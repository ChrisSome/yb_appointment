<?php

namespace center\modules\appointment\models;

use center\modules\Core\interfaces\BaseModelInterface;
use center\modules\log\models\LogWriter;
use common\models\Redis;
use Yii;
use yii\helpers\Json;

/**
 * This is the model class for table "ip_blacklists".
 *
 * @property integer $id
 * @property integer $ip_addr
 * @property integer $mgr_id
 * @property string $mgr_name
 * @property integer $created_at
 * @property integer $updated_at
 */
class IpBlacklist extends \center\modules\Core\models\BaseActiveRecord implements  BaseModelInterface
{
    public $default_field = ['id', 'ip_addr', 'mgr_name', 'created_at', 'updated_at'];
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ip_blacklists';
    }

    public function beforeSave($insert)
    {
        if ($insert) {
            $this->created_at = $this->updated_at = time();
            $this->mgr_name = $this->getMgrName();
            $this->mgr_id = Yii::$app->user->identity->getId();
        } else {
            $this->updated_at = time();
        }
        $this->ip_addr = ip2long($this->ip_addr);

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['ip_addr'], 'required'],
            [['mgr_id', 'created_at', 'updated_at'], 'integer'],
            [['mgr_name'], 'string', 'max' => 32],
            [['ip_addr'], 'unique'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'ip_addr' => 'Ip',
            'mgr_id' => 'Mgr ID',
            'mgr_name' => '操作员',
            'created_at' => '创建时间',
            'updated_at' => '更新时间',
        ];
    }

    public $_temOldAttr;

    /**
     * 保存后记录日志
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        //写日志开始 获取脏数据
        $dirtyArr = LogWriter::dirtyData($this->_temOldAttr, $this->getCurrentData());
        if (!empty($dirtyArr)) {
            $logData = [
                'operator' => $this->getMgrName(),
                'target' => long2ip($this->ip_addr),
                'action' => $insert ? 'add' : 'edit',
                'action_type' => 'ip manage',
                'content' => Json::encode($dirtyArr),
                'class' => __CLASS__,
                'type' => 0,
            ];
            LogWriter::write($logData);
        }
    }


    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
        $logData = [
            'operator' => $this->getMgrName(),
            'target' => long2ip($this->ip_addr),
            'action' => 'delete',
            'action_type' => 'delete',
            'content' => sprintf('%s删除ip【%s】成功', $this->getMgrName(), long2ip($this->ip_addr)),
            'class' => get_class($this),
            'type' => 1
        ];
        //Redis::executeCommand('lrem', self::$appointment_phones, [1, $this->mobile]);
        return LogWriter::write($logData);
    }


    /**
     * 获取当前的日志需要记录的值
     * @return array
     */
    public function getCurrentData()
    {
        //获取扩展字段
        $normalField = yii\helpers\ArrayHelper::merge([
            'mobile', 'mgr_name'
        ], []);


        return [
            'ip_addr' => is_numeric($this->ip_addr) ? long2ip($this->ip_addr) : $this->ip_addr,
        ];

    }


    //搜索字段
    private $_searchField = null;
    public function getSearchField()
    {
        // TODO: Implement getSearchField() method.
        return [
            'id' => 'ID',
            'ip_addr' => Yii::t('app', 'ip地址'),
            'mgr_name' => Yii::t('app', '操作员'),
            'created_at' => '创建时间',
            'updated_at' => '最后更新时间',
            'start_time' => '最后更新时间',
            'stop_time' => '最后更新时间',
        ];
    }

    public function getSearchInput()
    {
        // TODO: Implement getSearchInput() method.
        return yii\helpers\ArrayHelper::merge([
            'ip_addr' => [
                'label' => Yii::t('app', 'ip地址'),
            ],
            'start_time' => [
                'label' => Yii::t('app', 'start opt time'),
                'class' => '  inputDate'
            ],
            'stop_time' => [
                'label' => Yii::t('app', 'end opt time'),
                'class' => '  inputDate'
            ]

        ], []);
    }

    public function getAttributesList()
    {
        // TODO: Implement getAttributesList() method.
        return [
            'id' => 'ID',
            'domain' => Yii::t('app', 'domain'),
            'status' => Yii::t('app', 'status'),
            'created_at' => '创建时间',
            'updated_at' => '最后更新时间',
            'start_time' => '最后更新时间',
            'stop_time' => '最后更新时间',
        ];
    }
}
