<?php

namespace center\modules\appointment\models;

use center\modules\Core\interfaces\BaseModelInterface;
use center\modules\Core\models\BaseActiveRecord;
use center\modules\log\models\LogWriter;
use common\extend\Excel;
use common\models\Redis;
use Yii;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "user_appointments".
 *
 * @property integer $id
 * @property string $username
 * @property string $mobile
 * @property string $ip
 * @property integer $created_at
 */
class UserAppointments extends ActiveRecord
{
    public static $appointment_phones = "list:appointment:phones";
    public $default_field = ['id', 'username' ,'mobile', 'created_at', 'ip'];

    public function beforeSave($insert)
    {
        parent::beforeSave($insert); // TODO: Change the autogenerated stub
        if ($insert) {
            $this->created_at = time();
            $this->ip = Yii::$app->request->userIP;
        }
        return true;
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user_appointments';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['mobile', 'username'], 'required'],
            [['created_at'], 'integer'],
            [['username', 'ip'], 'string', 'max' => 128],
            [['mobile'], 'string', 'max' => 11],
            ['mobile', 'match', 'pattern' => '/^1\d{10}$/', 'message' => '{attribute}格式不正确'],
            //[['mobile'], 'unique'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => '用户名',
            'mobile' => '手机号',
            'created_at' => '预约时间',
            'ip' => 'ip地址'
        ];
    }

    //搜索字段
    private $_searchField = null;

    public function getSearchField()
    {
        if (!is_null($this->_searchField)) {
            return $this->_searchField;
        }

        $this->_searchField = [
            'id' => 'ID',
            'username' => '用户名',
            'mobile' => '手机号',
            'created_at' => '预约时间',
            'start_time' => '开始时间',
            'stop_time' => '结束时间',
            'ip' => 'ip地址'
        ];

        return $this->_searchField;
    }

    public function savePhone()
    {
        return $this->save();
    }

    /**
     * 要搜索的字段
     * @return array
     */
    public function getSearchInput()
    {
        //扩展字段加入搜索
        $exField = [];

        return yii\helpers\ArrayHelper::merge([
            'mobile' => [
                'label' => Yii::t('app', 'Mobile')
            ],
            'username' => [
                'label' => Yii::t('app', 'username')
            ],

            'start_time' => [
                'label' => Yii::t('app', 'start opt time'),
                'class' => '  inputDate'
            ],
            'stop_time' => [
                'label' => Yii::t('app', 'end opt time'),
                'class' => '  inputDate'
            ],
            'ip' => [
                'label' => Yii::t('app', 'ip')
            ],

        ], $exField);
    }

    public function getAttributesList()
    {
        // TODO: Implement getAttributesList() method.
        return [
            'id' => 'ID',
            'username' => '用户名',
            'mobile' => '手机号',
            'created_at' => '预约时间',
        ];
    }

    /**
     * 导出预约数据
     * @param $query
     */
    public function exportData($query)
    {
        $file = Yii::t('app', 'appointment/user/index') . '.xls';
        $title = Yii::t('app', 'batch export');

        $data = $query->all();
        $excelData = [];
        $excelData[] = ['用户名', '手机号', '预约时间', 'ip'];
        foreach ($data as $item) {
            $excelData[] = [
                $item->username, $item->mobile, date('Y-m-d H:i:s', $item->created_at), $item->ip
            ];
        }
        //将内容写入excel文件
        Excel::header_file($excelData, $file, $title);
        exit;
    }

    /**
     *
     *获取已经绑定的手机号
     * @return array|mixed
     */
    public function getHasBindAlreadyPhone()
    {
        $sListKey = UserAppointment::$appointment_phones; //预约队列， 用redis存储
        if (Redis::executeCommand('exists', $sListKey)) {
            $aPhones = Redis::executeCommand('lRange', $sListKey, [0, -1]);
        } else {
            $aPhones = self::find()->select('mobile')->column();
            if ($aPhones) {
                Redis::executeCommand('rPush', $sListKey,$aPhones);
            }
        }

        return  $aPhones;
    }


    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        Redis::executeCommand('RPUSH', self::$appointment_phones, [$this->mobile]);
    }

    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
        $logData = [
            'operator' => $this->getMgrName(),
            'target' => $this->mobile,
            'action' => 'delete',
            'action_type' => 'delete Mobile',
            'content' => sprintf('%s删除预约号码【%s】成功', $this->getMgrName(), $this->mobile),
            'class' => get_class($this),
            'type' => 1
        ];
        Redis::executeCommand('lrem', self::$appointment_phones, [1, $this->mobile]);
        return LogWriter::write($logData);
    }
}
